# redis的服务器地址
redis.host=127.0.0.1
# redis的服务端口
redis.port=6379
# 密码
redis.pass=
# 连接数据库
redis.default.db=0
# 客户端超时，时间单位是毫秒
redis.timeout=100000
# 最大连接数，默认8个
redis.maxTotal=500
# 最大空闲连接数，默认8个
redis.maxIdle=8
# 最小空闲连接数，默认0
redis.minIdle=1
# redis获取连接时的最大等待毫秒数（如果设置为阻塞时BlockWhenExhausted），如果超时就抛出异常，默认为-1
redis.maxWaitMillis=30000
# 指明是否检验从池中取出的连接，如果检验失败，则从池中去除连接并尝试取出另一个，默认为false
redis.testOnBorrow=true
# 连接耗尽时redis是否阻塞，false报出异常，true阻塞直到超时，默认为true
redis.blockWhenExhausted=true
# 设置的逐出策略类名，默认为DefaultEvictionPolicy（当连接超过最大空闲时间，或连接超过最大空闲连接数）
redis.evictionPolicyClassName=org.apache.commons.pool2.impl.DefaultEvictionPolicy
# 是否启用pool的jmx管理功能，默认为true
redis.jmxEnabled=true
# 是否启用后进先出，默认为true
redis.lifo=true
# 逐出连接的最小空闲时间，默认1800000ms（30分钟）
redis.minEvictableIdleTimeMillis=1800000
# 每次逐出检查时，逐出的最大数目，如果为负数即1/abs(n)时，默认为3
redis.numTestsPerEvictionRun=3
# 对象空闲多久后逐出，当空闲时间>该值且空闲连接>最大空闲连接数时直接逐出，不再根据MinEvictableIdleTimeMillis判断（默认逐出策略）
redis.softMinEvictableIdleTimeMillis=180000
# 在空闲时检查有效性，默认为false
redis.testWhileIdle=false
# 逐出扫描的时间间隔（毫秒）如果为负数，则不运行逐出线程，默认为-1
redis.timeBetweenEvictionRunsMillis=-1